/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDeployer,
  IDeployerInterface,
} from "../../../contracts/interfaces/IDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[5]",
        name: "addrs",
        type: "address[5]",
      },
      {
        internalType: "uint16[5]",
        name: "percents",
        type: "uint16[5]",
      },
      {
        internalType: "bool[2]",
        name: "flags",
        type: "bool[2]",
      },
      {
        internalType: "string[2]",
        name: "metadata",
        type: "string[2]",
      },
    ],
    name: "deployToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDeployer__factory {
  static readonly abi = _abi;
  static createInterface(): IDeployerInterface {
    return new Interface(_abi) as IDeployerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IDeployer {
    return new Contract(address, _abi, runner) as unknown as IDeployer;
  }
}
