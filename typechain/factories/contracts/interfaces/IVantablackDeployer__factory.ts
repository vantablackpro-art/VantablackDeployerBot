/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVantablackDeployer,
  IVantablackDeployerInterface,
} from "../../../contracts/interfaces/IVantablackDeployer";

const _abi = [
  {
    inputs: [],
    name: "closeProject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "executeHandover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "getProjectTaxBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateDeployedTokenTaxBalance",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IVantablackDeployer__factory {
  static readonly abi = _abi;
  static createInterface(): IVantablackDeployerInterface {
    return new Interface(_abi) as IVantablackDeployerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVantablackDeployer {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IVantablackDeployer;
  }
}
