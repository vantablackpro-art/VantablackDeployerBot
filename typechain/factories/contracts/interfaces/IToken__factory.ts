/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IToken,
  ITokenInterface,
} from "../../../contracts/interfaces/IToken";

const _abi = [
  {
    inputs: [],
    name: "getAddresses",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lpPair",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "dividendToken",
            type: "address",
          },
        ],
        internalType: "struct TokenAddresses",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IToken__factory {
  static readonly abi = _abi;
  static createInterface(): ITokenInterface {
    return new Interface(_abi) as ITokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IToken {
    return new Contract(address, _abi, runner) as unknown as IToken;
  }
}
