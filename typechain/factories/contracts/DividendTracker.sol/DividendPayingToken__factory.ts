/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DividendPayingToken,
  DividendPayingTokenInterface,
} from "../../../contracts/DividendTracker.sol/DividendPayingToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "accumulativeDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "dividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDividendsDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDividend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawableDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawnDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161103938038061103983398101604081905261002f916101b9565b338383600361003e83826102cd565b50600461004b82826102cd565b5050506001600160a01b03811661007c57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610085816100ae565b50600680546001600160a01b0319166001600160a01b03929092169190911790555061038b9050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261012757600080fd5b81516001600160401b0381111561014057610140610100565b604051601f8201601f19908116603f011681016001600160401b038111828210171561016e5761016e610100565b60405281815283820160200185101561018657600080fd5b60005b828110156101a557602081860181015183830182015201610189565b506000918101602001919091529392505050565b6000806000606084860312156101ce57600080fd5b83516001600160401b038111156101e457600080fd5b6101f086828701610116565b602086015190945090506001600160401b0381111561020e57600080fd5b61021a86828701610116565b604086015190935090506001600160a01b038116811461023957600080fd5b809150509250925092565b600181811c9082168061025857607f821691505b60208210810361027857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102c857806000526020600020601f840160051c810160208510156102a55750805b601f840160051c820191505b818110156102c557600081556001016102b1565b50505b505050565b81516001600160401b038111156102e6576102e6610100565b6102fa816102f48454610244565b8461027e565b6020601f82116001811461032e57600083156103165750848201515b600019600385901b1c1916600184901b1784556102c5565b600084815260208120601f198516915b8281101561035e578785015182556020948501946001909201910161033e565b508482101561037c5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610c9f8061039a6000396000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c806306fdde0314610101578063095ea7b31461011f57806318160ddd1461014257806323b872dd1461015457806327ce014714610167578063313ce5671461017a5780633243c791146101895780636a4740021461019e57806370a08231146101a6578063715018a6146101b957806385a6b3ae146101c15780638da5cb5b146101ca57806391b89fba146101df57806395d89b41146101f2578063a8b9d240146101fa578063a9059cbb1461020d578063aafd847a14610220578063d1af0c7d14610249578063dd62ed3e1461025c578063f2fde38b1461026f575b600080fd5b610109610282565b6040516101169190610a24565b60405180910390f35b61013261012d366004610a8e565b610314565b6040519015158152602001610116565b6002545b604051908152602001610116565b610132610162366004610ab8565b61032e565b610146610175366004610af5565b61034f565b60405160128152602001610116565b61019c610197366004610b10565b6103a8565b005b61019c610444565b6101466101b4366004610af5565b61044d565b61019c610468565b610146600a5481565b6101d261047c565b6040516101169190610b29565b6101466101ed366004610af5565b61048b565b610109610496565b610146610208366004610af5565b6104a5565b61013261021b366004610a8e565b6104d1565b61014661022e366004610af5565b6001600160a01b031660009081526009602052604090205490565b6006546101d2906001600160a01b031681565b61014661026a366004610b3d565b6104db565b61019c61027d366004610af5565b610506565b60606003805461029190610b70565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd90610b70565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b5050505050905090565b60003361032281858561054a565b60019150505b92915050565b60003361033c85828561055c565b610344600080fd5b506001949350505050565b6001600160a01b038116600090815260086020526040812054600160801b9061039e906103999061039361038e6103858861044d565b600754906105c3565b61064c565b9061065c565b61069a565b6103289190610bc0565b6103b06106ad565b60006103bb60025490565b116103c557600080fd5b8015610441576103f86103d760025490565b6103e583600160801b6105c3565b6103ef9190610bc0565b600754906106df565b60075560405181815233907fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d784541165119060200160405180910390a2600a5461043d90826106df565b600a555b50565b6104413361073c565b6001600160a01b031660009081526020819052604090205490565b6104706106ad565b61047a60006108a1565b565b6005546001600160a01b031690565b6000610328826104a5565b60606004805461029190610b70565b6001600160a01b038116600090815260096020526040812054610328906104cb8461034f565b906108f3565b6000336103228280fd5b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61050e6106ad565b6001600160a01b038116610541576000604051631e4fbdf760e01b81526004016105389190610b29565b60405180910390fd5b610441816108a1565b610557838383600161094f565b505050565b600061056884846104db565b90506000198110156105bd57818110156105ae57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610538565b6105bd8484848403600061094f565b50505050565b6000826000036105d557506000610328565b60006105e18385610be2565b9050826105ee8583610bc0565b146106455760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610538565b9392505050565b6000818181121561032857600080fd5b6000806106698385610bf9565b90506000831215801561067c5750838112155b80610691575060008312801561069157508381125b61064557600080fd5b6000808212156106a957600080fd5b5090565b336106b661047c565b6001600160a01b03161461047a573360405163118cdaa760e01b81526004016105389190610b29565b6000806106ec8385610c21565b9050838110156106455760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606401610538565b600080610748836104a5565b90508015610898576001600160a01b03831660009081526009602052604090205461077390826106df565b6001600160a01b038416600081815260096020526040908190209290925590517fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d906107c29084815260200190565b60405180910390a260065460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201849052600092169063a9059cbb906044016020604051808303816000875af115801561081e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108429190610c34565b905080610891576001600160a01b03841660009081526009602052604090205461086c90836108f3565b6001600160a01b03909416600090815260096020526040812094909455509192915050565b5092915050565b50600092915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000828211156109455760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610538565b6106458284610c56565b6001600160a01b03841661097957600060405163e602df0560e01b81526004016105389190610b29565b6001600160a01b0383166109a3576000604051634a1406b160e11b81526004016105389190610b29565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105bd57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a1691815260200190565b60405180910390a350505050565b602081526000825180602084015260005b81811015610a525760208186018101516040868401015201610a35565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610a8957600080fd5b919050565b60008060408385031215610aa157600080fd5b610aaa83610a72565b946020939093013593505050565b600080600060608486031215610acd57600080fd5b610ad684610a72565b9250610ae460208501610a72565b929592945050506040919091013590565b600060208284031215610b0757600080fd5b61064582610a72565b600060208284031215610b2257600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60008060408385031215610b5057600080fd5b610b5983610a72565b9150610b6760208401610a72565b90509250929050565b600181811c90821680610b8457607f821691505b602082108103610ba457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082610bdd57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761032857610328610baa565b8082018281126000831280158216821582161715610c1957610c19610baa565b505092915050565b8082018082111561032857610328610baa565b600060208284031215610c4657600080fd5b8151801515811461064557600080fd5b8181038181111561032857610328610baa56fea26469706673582212204a554e04ab856a6aeb453c1383a4fe7a133db46f191825aff8ed885a37be4f3364736f6c634300081e0033";

type DividendPayingTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DividendPayingTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DividendPayingToken__factory extends ContractFactory {
  constructor(...args: DividendPayingTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _rewardsToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _rewardsToken,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _rewardsToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _rewardsToken,
      overrides || {}
    ) as Promise<
      DividendPayingToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DividendPayingToken__factory {
    return super.connect(runner) as DividendPayingToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DividendPayingTokenInterface {
    return new Interface(_abi) as DividendPayingTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DividendPayingToken {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DividendPayingToken;
  }
}
