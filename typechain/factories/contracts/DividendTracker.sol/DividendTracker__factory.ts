/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DividendTracker,
  DividendTrackerInterface,
} from "../../../contracts/DividendTracker.sol/DividendTracker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minimumTokenBalanceForDividends",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "automatic",
        type: "bool",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
    ],
    name: "ClaimWaitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "DividendsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ExcludeFromDividends",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "accumulativeDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimWait",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "dividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromDividends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "excludedFromDividends",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "int256",
        name: "index",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "iterationsUntilProcessed",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "withdrawableDividends",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDividends",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "secondsUntilAutoClaimAvailable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAccountAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfTokenHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimTimes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumTokenBalanceForDividends",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "automatic",
        type: "bool",
      },
    ],
    name: "processAccount",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDividendsDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newClaimWait",
        type: "uint256",
      },
    ],
    name: "updateClaimWait",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDividend",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawableDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "withdrawnDividendOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611eac380380611eac83398101604081905261002f916101c1565b604080518082018252600f8082526e2234bb34b232b72faa3930b1b5b2b960891b602080840182905284518086019095529184529083015290833383836003610078838261029a565b506004610085828261029a565b5050506001600160a01b0381166100bb576000604051631e4fbdf760e01b81526004016100b29190610358565b60405180910390fd5b6100c481610102565b50600680546001600160a01b0319166001600160a01b03929092169190911790555050610e1060125560138190556100fb33610154565b505061036c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61015c610192565b6001600160a01b038116610186576000604051631e4fbdf760e01b81526004016100b29190610358565b61018f81610102565b50565b6005546001600160a01b031633146101bf573360405163118cdaa760e01b81526004016100b29190610358565b565b600080604083850312156101d457600080fd5b82516001600160a01b03811681146101eb57600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061022557607f821691505b60208210810361024557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561029557806000526020600020601f840160051c810160208510156102725750805b601f840160051c820191505b81811015610292576000815560010161027e565b50505b505050565b81516001600160401b038111156102b3576102b36101fb565b6102c7816102c18454610211565b8461024b565b6020601f8211600181146102fb57600083156102e35750848201515b600019600385901b1c1916600184901b178455610292565b600084815260208120601f198516915b8281101561032b578785015182556020948501946001909201910161030b565b50848210156103495786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b0391909116815260200190565b611b318061037b6000396000f3fe608060405234801561001057600080fd5b50600436106101965760003560e01c806306fdde031461019b578063095ea7b3146101b957806309bbedde146101dc57806318160ddd146101ee578063226cfa3d146101f657806323b872dd1461021657806327ce0147146102295780633009a6091461023c578063313ce5671461024557806331e79db0146102545780633243c791146102695780634e7b827f1461027c5780635183d6fd1461029f5780636a474002146102f75780636f2789ec146102ff57806370a0823114610308578063715018a61461031b57806385a6b3ae146103235780638da5cb5b1461032c57806391b89fba1461034157806395d89b4114610354578063a8b9d2401461035c578063a9059cbb1461036f578063aafd847a14610382578063bc4c4b37146103ab578063be10b614146103be578063d1af0c7d146103c7578063dd62ed3e146103da578063e30443bc146103ed578063e7841ec014610400578063e98030c714610408578063f2fde38b1461041b578063fbcbc0f11461042e578063ffb2c47914610441575b600080fd5b6101a361046f565b6040516101b091906117bb565b60405180910390f35b6101cc6101c736600461181e565b610501565b60405190151581526020016101b0565b600b545b6040519081526020016101b0565b6002546101e0565b6101e061020436600461184a565b60116020526000908152604090205481565b6101cc610224366004611867565b61051b565b6101e061023736600461184a565b61053f565b6101e0600f5481565b604051601281526020016101b0565b61026761026236600461184a565b610598565b005b6102676102773660046118a8565b610695565b6101cc61028a36600461184a565b60106020526000908152604090205460ff1681565b6102b26102ad3660046118a8565b610731565b604080516001600160a01b0390991689526020890197909752958701949094526060860192909252608085015260a084015260c083015260e0820152610100016101b0565b610267610885565b6101e060125481565b6101e061031636600461184a565b610935565b610267610950565b6101e0600a5481565b610334610962565b6040516101b091906118c1565b6101e061034f36600461184a565b610971565b6101a361097c565b6101e061036a36600461184a565b61098b565b6101cc61037d36600461181e565b6109b7565b6101e061039036600461184a565b6001600160a01b031660009081526009602052604090205490565b6101cc6103b93660046118e3565b6109c5565b6101e060135481565b600654610334906001600160a01b031681565b6101e06103e836600461191c565b610a50565b6102676103fb36600461181e565b610a7b565b600f546101e0565b6102676104163660046118a8565b610bbb565b61026761042936600461184a565b610cfc565b6102b261043c36600461184a565b610d37565b61045461044f3660046118a8565b610e98565b604080519384526020840192909252908201526060016101b0565b60606003805461047e9061194a565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa9061194a565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b5050505050905090565b60003361050f818585610fb5565b60019150505b92915050565b600033610529858285610fc2565b610534858585611016565b506001949350505050565b6001600160a01b038116600090815260086020526040812054600160801b9061058e906105899061058361057e61057588610935565b6007549061106d565b6110f6565b90611106565b611144565b610515919061199a565b6105a0611157565b6001600160a01b03811660009081526010602052604090205460ff16156105c657600080fd5b6001600160a01b0381166000908152601060205260408120805460ff191660011790556105f4908290611189565b60405163131836e760e21b815273__$ce39e7eba0e8c210ce522c13d692fbaca1$__90634c60db9c9061062e90600b9085906004016119bc565b60006040518083038186803b15801561064657600080fd5b505af415801561065a573d6000803e3d6000fd5b50506040516001600160a01b03841692507fa878b31040b2e6d0a9a3d3361209db3908ba62014b0dca52adbaee451d128b259150600090a250565b61069d611157565b60006106a860025490565b116106b257600080fd5b801561072e576106e56106c460025490565b6106d283600160801b61106d565b6106dc919061199a565b600754906111dc565b60075560405181815233907fa493a9229478c3fcd73f66d2cdeb7f94fd0f341da924d1054236d784541165119060200160405180910390a2600a5461072a90826111dc565b600a555b50565b600080600080600080600080600b73__$ce39e7eba0e8c210ce522c13d692fbaca1$__63deb3d89690916040518263ffffffff1660e01b815260040161077991815260200190565b602060405180830381865af4158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba91906119d3565b89106107df57506000965060001995508594508693508392508291508190508061087a565b6040516368d54f3f60e11b8152600b6004820152602481018a905260009073__$ce39e7eba0e8c210ce522c13d692fbaca1$__9063d1aa9e7e90604401602060405180830381865af4158015610839573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085d91906119ec565b905061086881610d37565b98509850985098509850985098509850505b919395975091939597565b60405162461bcd60e51b815260206004820152606c60248201527f4469766964656e645f547261636b65723a20776974686472617744697669646560448201527f6e642064697361626c65642e20557365207468652027636c61696d272066756e60648201527f6374696f6e206f6e20746865206d61696e204469766964656e645f547261636b60848201526b32b91031b7b73a3930b1ba1760a11b60a482015260c4015b60405180910390fd5b565b6001600160a01b031660009081526020819052604090205490565b610958611157565b6109336000611239565b6005546001600160a01b031690565b60006105158261098b565b60606004805461047e9061194a565b6001600160a01b038116600090815260096020526040812054610515906109b18461053f565b9061128b565b60003361050f818585611016565b60006109cf611157565b60006109da846112e7565b90508015610a46576001600160a01b038416600081815260116020526040908190204290555184151591907fa2c38e2d2fb7e3e1912d937fd1ca11ed6d51864dee4cfa7a7bf02becd7acf09290610a349085815260200190565b60405180910390a36001915050610515565b5060009392505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610a83611157565b6001600160a01b03821660009081526010602052604090205460ff16610bb7576013548110610b3457610ab68282611189565b604051632f0ad01760e21b8152600b60048201526001600160a01b03831660248201526044810182905273__$ce39e7eba0e8c210ce522c13d692fbaca1$__9063bc2b405c9060640160006040518083038186803b158015610b1757600080fd5b505af4158015610b2b573d6000803e3d6000fd5b50505050610baa565b610b3f826000611189565b60405163131836e760e21b815273__$ce39e7eba0e8c210ce522c13d692fbaca1$__90634c60db9c90610b7990600b9086906004016119bc565b60006040518083038186803b158015610b9157600080fd5b505af4158015610ba5573d6000803e3d6000fd5b505050505b610bb58260016109c5565b505b5050565b610bc3611157565b610e108110158015610bd85750620151808111155b610c585760405162461bcd60e51b815260206004820152604560248201527f4469766964656e645f547261636b65723a20636c61696d57616974206d75737460448201527f206265207570646174656420746f206265747765656e203120616e6420323420606482015264686f75727360d81b608482015260a40161092a565b6012548103610cc95760405162461bcd60e51b815260206004820152603760248201527f4469766964656e645f547261636b65723a2043616e6e6f742075706461746520604482015276636c61696d5761697420746f2073616d652076616c756560481b606482015260840161092a565b60125460405182907f474ea64804364a1e29a4487ddb63c3342a2dd826ccd8acf48825e680a0e6f20f90600090a3601255565b610d04611157565b6001600160a01b038116610d2e576000604051631e4fbdf760e01b815260040161092a91906118c1565b61072e81611239565b600080600080600080600080889750600b73__$ce39e7eba0e8c210ce522c13d692fbaca1$__6317e142d190918a6040518363ffffffff1660e01b8152600401610d829291906119bc565b602060405180830381865af4158015610d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc391906119d3565b9650600019955060008712610e2557600f54871115610df157600f54610dea90889061144c565b9550610e25565b600f54600b5460009110610e06576000610e15565b600f54600b54610e159161128b565b9050610e218882611106565b9650505b610e2e8861098b565b9450610e398861053f565b6001600160a01b038916600090815260116020526040902054909450925082610e63576000610e71565b601254610e719084906111dc565b9150428211610e81576000610e8b565b610e8b824261128b565b9050919395975091939597565b600b5460009081908190808203610eba575050600f5460009250829150610fae565b600f546000805a90506000805b8984108015610ed557508582105b15610f9d5784610ee481611a09565b600b5490965086109050610ef757600094505b6000600b6000018681548110610f0f57610f0f611a22565b60009182526020808320909101546001600160a01b03168083526011909152604090912054909150610f4090611498565b15610f6357610f508160016109c5565b15610f635781610f5f81611a09565b9250505b82610f6d81611a09565b93505060005a905080851115610f9457610f91610f8a868361128b565b87906111dc565b95505b9350610ec79050565b600f85905590975095509193505050505b9193909250565b610bb583838360016114bf565b6000610fce8484610a50565b9050600019811015611010578181101561100157828183604051637dc7a0d960e11b815260040161092a93929190611a38565b611010848484840360006114bf565b50505050565b60405162461bcd60e51b815260206004820152602660248201527f4469766964656e645f547261636b65723a204e6f207472616e736665727320616044820152651b1b1bddd95960d21b606482015260840161092a565b60008260000361107f57506000610515565b600061108b8385611a59565b905082611098858361199a565b146110ef5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b606482015260840161092a565b9392505050565b6000818181121561051557600080fd5b6000806111138385611a70565b9050600083121580156111265750838112155b8061113b575060008312801561113b57508381125b6110ef57600080fd5b60008082121561115357600080fd5b5090565b33611160610962565b6001600160a01b031614610933573360405163118cdaa760e01b815260040161092a91906118c1565b600061119483610935565b9050808211156111bc5760006111aa838361128b565b90506111b68482611594565b50610bb5565b80821015610bb55760006111d0828461128b565b905061101084826115f8565b6000806111e98385611a98565b9050838110156110ef5760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015260640161092a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000828211156112dd5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015260640161092a565b6110ef8284611aab565b6000806112f38361098b565b90508015611443576001600160a01b03831660009081526009602052604090205461131e90826111dc565b6001600160a01b038416600081815260096020526040908190209290925590517fee503bee2bb6a87e57bc57db795f98137327401a0e7b7ce42e37926cc1a9ca4d9061136d9084815260200190565b60405180910390a260065460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201849052600092169063a9059cbb906044016020604051808303816000875af11580156113c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ed9190611abe565b90508061143c576001600160a01b038416600090815260096020526040902054611417908361128b565b6001600160a01b03909416600090815260096020526040812094909455509192915050565b5092915050565b50600092915050565b60008082121580156114675750826114648382611adb565b13155b8061148557506000821280156114855750826114838382611adb565b135b61148e57600080fd5b6110ef8284611adb565b6000428211156114aa57506000919050565b6012546114b7428461128b565b101592915050565b6001600160a01b0384166114e957600060405163e602df0560e01b815260040161092a91906118c1565b6001600160a01b038316611513576000604051634a1406b160e11b815260040161092a91906118c1565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561101057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161158691815260200190565b60405180910390a350505050565b61159e828261163c565b6115d86115b961057e8360075461106d90919063ffffffff16565b6001600160a01b0384166000908152600860205260409020549061144c565b6001600160a01b0390921660009081526008602052604090209190915550565b6116028282611672565b6115d861161d61057e8360075461106d90919063ffffffff16565b6001600160a01b03841660009081526008602052604090205490611106565b6001600160a01b03821661166657600060405163ec442f0560e01b815260040161092a91906118c1565b610bb7600083836116a4565b6001600160a01b03821661169c576000604051634b637e8f60e11b815260040161092a91906118c1565b610bb7826000835b6001600160a01b0383166116cf5780600260008282546116c49190611a98565b9091555061172e9050565b6001600160a01b0383166000908152602081905260409020548181101561170f5783818360405163391434e360e21b815260040161092a93929190611a38565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661174a57600280548290039055611769565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117ae91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b818110156117e957602081860181015160408684010152016117cc565b506000604082850101526040601f19601f83011684010191505092915050565b6001600160a01b038116811461072e57600080fd5b6000806040838503121561183157600080fd5b823561183c81611809565b946020939093013593505050565b60006020828403121561185c57600080fd5b81356110ef81611809565b60008060006060848603121561187c57600080fd5b833561188781611809565b9250602084013561189781611809565b929592945050506040919091013590565b6000602082840312156118ba57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b801515811461072e57600080fd5b600080604083850312156118f657600080fd5b823561190181611809565b91506020830135611911816118d5565b809150509250929050565b6000806040838503121561192f57600080fd5b823561193a81611809565b9150602083013561191181611809565b600181811c9082168061195e57607f821691505b60208210810361197e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000826119b757634e487b7160e01b600052601260045260246000fd5b500490565b9182526001600160a01b0316602082015260400190565b6000602082840312156119e557600080fd5b5051919050565b6000602082840312156119fe57600080fd5b81516110ef81611809565b600060018201611a1b57611a1b611984565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039390931683526020830191909152604082015260600190565b808202811582820484141761051557610515611984565b8082018281126000831280158216821582161715611a9057611a90611984565b505092915050565b8082018082111561051557610515611984565b8181038181111561051557610515611984565b600060208284031215611ad057600080fd5b81516110ef816118d5565b818103600083128015838313168383128216171561143c5761143c61198456fea26469706673582212209cad8c89ef4c09ed122deb01a4aa95914c6e4fd509518195c47d6511912dd83764736f6c634300081e0033";

type DividendTrackerConstructorParams =
  | [linkLibraryAddresses: DividendTrackerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DividendTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DividendTracker__factory extends ContractFactory {
  constructor(...args: DividendTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DividendTracker__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DividendTrackerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ce39e7eba0e8c210ce522c13d692fbaca1\\$__", "g"),
      linkLibraryAddresses["contracts/IterableMapping.sol:IterableMapping"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    tokenAddress: AddressLike,
    _minimumTokenBalanceForDividends: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      tokenAddress,
      _minimumTokenBalanceForDividends,
      overrides || {}
    );
  }
  override deploy(
    tokenAddress: AddressLike,
    _minimumTokenBalanceForDividends: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      tokenAddress,
      _minimumTokenBalanceForDividends,
      overrides || {}
    ) as Promise<
      DividendTracker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DividendTracker__factory {
    return super.connect(runner) as DividendTracker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DividendTrackerInterface {
    return new Interface(_abi) as DividendTrackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DividendTracker {
    return new Contract(address, _abi, runner) as unknown as DividendTracker;
  }
}

export interface DividendTrackerLibraryAddresses {
  ["contracts/IterableMapping.sol:IterableMapping"]: string;
}
