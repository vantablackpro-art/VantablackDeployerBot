/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NonStandardERC20,
  NonStandardERC20Interface,
} from "../../../contracts/mocks/NonStandardERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff1916601217905534801561001d57600080fd5b506040516109ab3803806109ab83398101604081905261003c9161012c565b60006100488482610227565b5060016100558382610227565b50600381905533600090815260046020526040902055506102e59050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009a57600080fd5b81516001600160401b038111156100b3576100b3610073565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100e1576100e1610073565b6040528181528382016020018510156100f957600080fd5b60005b82811015610118576020818601810151838301820152016100fc565b506000918101602001919091529392505050565b60008060006060848603121561014157600080fd5b83516001600160401b0381111561015757600080fd5b61016386828701610089565b602086015190945090506001600160401b0381111561018157600080fd5b61018d86828701610089565b925050604084015190509250925092565b600181811c908216806101b257607f821691505b6020821081036101d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561022257806000526020600020601f840160051c810160208510156101ff5750805b601f840160051c820191505b8181101561021f576000815560010161020b565b50505b505050565b81516001600160401b0381111561024057610240610073565b6102548161024e845461019e565b846101d8565b6020601f82116001811461028857600083156102705750848201515b600019600385901b1c1916600184901b17845561021f565b600084815260208120601f198516915b828110156102b85787850151825560209485019460019092019101610298565b50848210156102d65786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6106b7806102f46000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806306fdde0314610088578063095ea7b3146100a657806318160ddd146100bb57806323b872dd146100d2578063313ce567146100e557806370a082311461010457806395d89b4114610124578063a9059cbb1461012c578063dd62ed3e1461013f575b600080fd5b61009061016a565b60405161009d9190610491565b60405180910390f35b6100b96100b43660046104fb565b6101f8565b005b6100c460035481565b60405190815260200161009d565b6100b96100e0366004610525565b610258565b6002546100f29060ff1681565b60405160ff909116815260200161009d565b6100c4610112366004610562565b60046020526000908152604090205481565b6100906103d9565b6100b961013a3660046104fb565b6103e6565b6100c461014d366004610584565b600560209081526000928352604080842090915290825290205481565b60008054610177906105b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101a3906105b7565b80156101f05780601f106101c5576101008083540402835291602001916101f0565b820191906000526020600020905b8154815290600101906020018083116101d357829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020859055518481529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35050565b6001600160a01b0383166000908152600460205260409020548111156102995760405162461bcd60e51b8152600401610290906105f1565b60405180910390fd5b6001600160a01b03831660009081526005602090815260408083203384529091529020548111156103055760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606401610290565b6001600160a01b0383166000908152600460205260408120805483929061032d908490610635565b90915550506001600160a01b0382166000908152600460205260408120805483929061035a90849061064e565b90915550506001600160a01b038316600090815260056020908152604080832033845290915281208054839290610392908490610635565b92505081905550816001600160a01b0316836001600160a01b0316600080516020610662833981519152836040516103cc91815260200190565b60405180910390a3505050565b60018054610177906105b7565b336000908152600460205260409020548111156104155760405162461bcd60e51b8152600401610290906105f1565b3360009081526004602052604081208054839290610434908490610635565b90915550506001600160a01b0382166000908152600460205260408120805483929061046190849061064e565b90915550506040518181526001600160a01b0383169033906000805160206106628339815191529060200161024c565b602081526000825180602084015260005b818110156104bf57602081860181015160408684010152016104a2565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146104f657600080fd5b919050565b6000806040838503121561050e57600080fd5b610517836104df565b946020939093013593505050565b60008060006060848603121561053a57600080fd5b610543846104df565b9250610551602085016104df565b929592945050506040919091013590565b60006020828403121561057457600080fd5b61057d826104df565b9392505050565b6000806040838503121561059757600080fd5b6105a0836104df565b91506105ae602084016104df565b90509250929050565b600181811c908216806105cb57607f821691505b6020821081036105eb57634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156106485761064861061f565b92915050565b808201808211156106485761064861061f56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122060b7f5b5a7c62867626f4dd95d7b0adcf4d5c8dedc10554458dc89b481efce0f64736f6c634300081e0033";

type NonStandardERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonStandardERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonStandardERC20__factory extends ContractFactory {
  constructor(...args: NonStandardERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    ) as Promise<
      NonStandardERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NonStandardERC20__factory {
    return super.connect(runner) as NonStandardERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonStandardERC20Interface {
    return new Interface(_abi) as NonStandardERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NonStandardERC20 {
    return new Contract(address, _abi, runner) as unknown as NonStandardERC20;
  }
}
