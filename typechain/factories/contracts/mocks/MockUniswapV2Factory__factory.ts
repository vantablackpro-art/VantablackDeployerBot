/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockUniswapV2Factory,
  MockUniswapV2FactoryInterface,
} from "../../../contracts/mocks/MockUniswapV2Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allPairs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allPairsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "setPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061028c8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631e3dd18b1461005c578063574f2ba31461008c5780637bb410121461009d578063c9c653961461013a578063e6a4390514610150575b600080fd5b61006f61006a3660046101ab565b610181565b6040516001600160a01b0390911681526020015b60405180910390f35b600154604051908152602001610083565b6101386100ab3660046101e0565b6001600160a01b0392831660008181526020818152604080832095871683529481528482208054969094166001600160a01b0319968716811790945581815284822092825291909152918220805484168217905560018054808201825592527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69091018054909216179055565b005b61006f610148366004610223565b600092915050565b61006f61015e366004610223565b60006020818152928152604080822090935290815220546001600160a01b031681565b6001818154811061019157600080fd5b6000918252602090912001546001600160a01b0316905081565b6000602082840312156101bd57600080fd5b5035919050565b80356001600160a01b03811681146101db57600080fd5b919050565b6000806000606084860312156101f557600080fd5b6101fe846101c4565b925061020c602085016101c4565b915061021a604085016101c4565b90509250925092565b6000806040838503121561023657600080fd5b61023f836101c4565b915061024d602084016101c4565b9050925092905056fea26469706673582212203216974f41b6ef67994e23d32d046367530ba2317b997cab0bf66cf834c3109c64736f6c634300081e0033";

type MockUniswapV2FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockUniswapV2FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockUniswapV2Factory__factory extends ContractFactory {
  constructor(...args: MockUniswapV2FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockUniswapV2Factory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockUniswapV2Factory__factory {
    return super.connect(runner) as MockUniswapV2Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUniswapV2FactoryInterface {
    return new Interface(_abi) as MockUniswapV2FactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockUniswapV2Factory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockUniswapV2Factory;
  }
}
